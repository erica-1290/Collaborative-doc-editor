{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final_project1\\\\collaborative-doc-editor\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Update with your server URL\n\nfunction App() {\n  _s();\n  const [documentContent, setDocumentContent] = useState('');\n  useEffect(() => {\n    // Listen for document updates from the server\n    socket.on('update-document', data => {\n      setDocumentContent(data);\n    });\n    return () => {\n      // Clean up on component unmount\n      socket.disconnect();\n    };\n  }, []);\n  const handleInputChange = event => {\n    const content = event.target.value;\n    setDocumentContent(content);\n\n    // Send the updated document to the server\n    socket.emit('update-document', content);\n  };\n  const handleFormat = format => {\n    document.execCommand(format, false, null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleFormat('bold'),\n        children: \"Bold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleFormat('italic'),\n        children: \"Italic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleFormat('underline'),\n        children: \"Underline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: documentContent,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TKHKIyX8OnVemByiQJ2Ib5pL3xs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","App","_s","documentContent","setDocumentContent","on","data","disconnect","handleInputChange","event","content","target","value","emit","handleFormat","format","document","execCommand","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["D:/Final_project1/collaborative-doc-editor/client/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\nconst socket = io('http://localhost:5000'); // Update with your server URL\n\nfunction App() {\n  const [documentContent, setDocumentContent] = useState('');\n\n  useEffect(() => {\n    // Listen for document updates from the server\n    socket.on('update-document', (data) => {\n      setDocumentContent(data);\n    });\n\n    return () => {\n      // Clean up on component unmount\n      socket.disconnect();\n    };\n  }, []);\n\n  const handleInputChange = (event) => {\n    const content = event.target.value;\n    setDocumentContent(content);\n\n    // Send the updated document to the server\n    socket.emit('update-document', content);\n  };\n\n  const handleFormat = (format) => {\n    document.execCommand(format, false, null);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"toolbar\">\n        <button onClick={() => handleFormat('bold')}>Bold</button>\n        <button onClick={() => handleFormat('italic')}>Italic</button>\n        <button onClick={() => handleFormat('underline')}>Underline</button>\n      </div>\n      <textarea value={documentContent} onChange={handleInputChange} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;;AAE5C,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd;IACAI,MAAM,CAACK,EAAE,CAAC,iBAAiB,EAAGC,IAAI,IAAK;MACrCF,kBAAkB,CAACE,IAAI,CAAC;IAC1B,CAAC,CAAC;IAEF,OAAO,MAAM;MACX;MACAN,MAAM,CAACO,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAClCR,kBAAkB,CAACM,OAAO,CAAC;;IAE3B;IACAV,MAAM,CAACa,IAAI,CAAC,iBAAiB,EAAEH,OAAO,CAAC;EACzC,CAAC;EAED,MAAMI,YAAY,GAAIC,MAAM,IAAK;IAC/BC,QAAQ,CAACC,WAAW,CAACF,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC;EAC3C,CAAC;EAED,oBACEhB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA;MAAKmB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBpB,OAAA;QAAQqB,OAAO,EAAEA,CAAA,KAAMN,YAAY,CAAC,MAAM,CAAE;QAAAK,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1DzB,OAAA;QAAQqB,OAAO,EAAEA,CAAA,KAAMN,YAAY,CAAC,QAAQ,CAAE;QAAAK,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9DzB,OAAA;QAAQqB,OAAO,EAAEA,CAAA,KAAMN,YAAY,CAAC,WAAW,CAAE;QAAAK,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eACNzB,OAAA;MAAUa,KAAK,EAAET,eAAgB;MAACsB,QAAQ,EAAEjB;IAAkB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV;AAACtB,EAAA,CArCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}